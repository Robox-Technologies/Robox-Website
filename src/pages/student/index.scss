@use '../../root/variables';

$projectIconSize: 1.2em;
$projectIconGap: 5px;

$projectCardGap: 30px;
$projectCardWidth: 250px;
$cardBorderRadius: 5%;

#main {
    padding: 30px;
}
.fa-square-binary {
    height: $projectIconSize;
    width: $projectIconSize;
    background-color: white;
    margin-right: $projectIconGap;
}
.fa-square-binary > path {
    color: variables.$themeBlue;
}
.fa-chevron-right {
    font-size: 12px;
}

.guide-icon-arrow {
    height: 12px;
    width: 12px;
    margin-top: 1px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-left: $projectIconGap;
}

.assembly-card > .card-info > .card-buttons {
    flex-direction: column;
}
.card-holder {
    display: flex;
    width: 100%;
    align-items: stretch;
    align-content: center;
    gap: $projectCardGap; 
    flex-wrap: wrap;
}
.project-card {
    width: $projectCardWidth;
    transition: transform 0.5s ease-in-out;
    transform-style: preserve-3d;
    transition: transform 0.1s ease-out;
    transform-style: preserve-3d;
    will-change: transform;
    box-sizing: border-box;
}
.project-card:hover {
    border: 3px solid variables.$themeRed;
}


#create-project {
    width: $projectCardWidth;
    border-radius: $cardBorderRadius;
    background-color: variables.$themeBlue;
    display: flex;
    justify-content: center;
    align-content: center;
    flex-direction: column;
}
#create-project > * {
    color: white;
    text-align: center;
    font-size: 30px;
}
#create-project > p{
    margin-top: 10px;
    margin-bottom: 0;
}
#create-project > svg > path {
    color: white;
}

$heroTextWidth: 35%; 

$borderLineWidth: 10px;


$heroImageWidth: calc(100% - $heroTextWidth);
$overlap: 100px;
$borderColour: #26363b;
$heroContainerHeight: 320px;
#hero {
    height: 320px;
    width: 100%;
    display: flex;
    flex-direction: row;
    background-color: #26363b;
}
#hero-image {
    height: $heroContainerHeight;
    width: $heroImageWidth ;
    clip-path: polygon(calc($overlap + $borderLineWidth) 0, 100% 0, 100% 100%, $borderLineWidth 100%);

    position: absolute;
    object-fit:cover;
    left: $heroTextWidth
}
#hero-title-container {
    height: 320px;
    background-color: variables.$themeYellow;
    width: calc($heroTextWidth + $overlap);
    clip-path: polygon(0 0, calc(100% - $borderLineWidth) 0, calc(100% - $borderLineWidth - $overlap) 100%, 0 100%);
    position: absolute;
    z-index: 1;
}
$titleSidePadding: 40px;
$titleFontsize: 49px;
#hero-title {
    font-size: $titleFontsize;
    position: relative;
    top: calc($heroContainerHeight - $titleFontsize - $titleSidePadding);
    left: $titleSidePadding;
    margin: 0;
}
.lesson-card > .card-info > .card-descriptions {
    display: flex;
    justify-content: space-between;
    flex-direction: row;
}
.card-button:hover {
    cursor: pointer;
}
//Credits too https://stackoverflow.com/questions/62867788/text-underline-animation-in-css-the-simplest-way
.assembly-card > .card-info > .card-buttons > .card-button > span{
    background: linear-gradient(variables.$themeBlue 0 0) bottom left/var(--underline-width, 0%) 0.1em no-repeat;

    display: inline-block;
    padding: 0 0 0.2em;
    text-decoration: none;
    transition: background-size 0.5s;
}
.assembly-card > .card-info > .card-buttons > .card-button:hover {
    --underline-width: 100%;
}
